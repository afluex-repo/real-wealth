@model RealWealth.Models.EmployeeRegistrations

@{
    ViewBag.Title = "EmployeeRegistration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("EmployeeRegistration", "EmployeeRegistration", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="container">
        <div class="row layout-top-spacing">
            <div class="col-lg-12 col-12 layout-spacing">
                <div class="statbox widget box box-shadow">
                    <div class="widget-header">
                        <div class="row">
                            <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                <h4>Employee Registration</h4>
                                <span class="text-danger">
                                    @TempData["EmployeeRegistration"]
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="widget-content widget-content-area">

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">User Type <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.Fk_UserTypeId, new SelectList(ViewBag.ddlUserType, "Value", "Text"), new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Name <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Mobile No <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", @Placeholder = "Mobile No", @Maxlength = "10", @onkeypress = "return isNumberKey(event);" })

                                    </div>
                                </div>
                            </div>

                        </div>


                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Email Id <span style="color: red">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @Onchange = "checkEmail();" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Qualification </label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.EducationQualififcation, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        @Html.HiddenFor(m => m.LoginId)

                        <div class="row">
                            <div class="col-md-9">

                                @if (Model.LoginId == null)
                                {
                                    <a class="btn btn-success" value="Register" onclick="filldata()">Register</a>   }
                                else
                                {
                                    <a class="btn btn-success" value="Register" onclick="Updatefilldata()">Update</a>  }

                                <a class="btn btn-primary" href="/EmployeeRegistration/EmployeeDetails">Back To List</a>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="../../WebsiteCss/js/jquery.js"></script>
<link href="../../AssociatePanelcss/assets/css/style.css" rel="stylesheet" />
<script type="text/javascript">


    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function checkEmail() {
        debugger;

        if (($("#Email").val() != "")) {
            if ($("#Email").val()) {

                var email = document.getElementById('Email');
                var filter = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);

                if (!filter.test($("#Email").val())) {
                    alert('Please provide a valid email address');
                    $("#Email").val('');
                    $("#Email").focus();
                    return false;
                }



            }

        }

    }
    function filldata() {
        debugger;

        var Fk_UserTypeId = $("#Fk_UserTypeId option:selected").val();
        $(".errortext").removeClass("errortext");
        if ($("#Fk_UserTypeId").val() == "") {
            $("#Fk_UserTypeId").addClass('errortext');
            $("#Fk_UserTypeId").focus();
            return false;
        }
        if ($("#Name").val() == "") {
            $("#Name").addClass('errortext');
            $("#Name").focus();
            return false;
        }

        if ($("#Mobile").val() == "") {
            $("#Mobile").addClass('errortext');
            $("#Mobile").focus();
            return false;
        }


        if ($("#Email").val() == "") {
            $("#Email").addClass('errortext');
            $("#Email").focus();
            return false;
        }
        $.ajax({
            url: '/EmployeeRegistration/SaveEmployeeRegistration',
            type: "GET",
            dataType: "JSON",
            data: { Name: $("#Name").val(), Mobile: $("#Mobile").val(), Email: $("#Email").val(), Qualification: $("#EducationQualififcation").val(), Fk_UserTypeId: Fk_UserTypeId },
            success: function (data) {
                debugger;
                if (data.Result=="1") {
                    debugger;
                    $('#Name').html("");
                    $('#Mobile').html("");
                    $('#Email').html("");
                    alert(data.Message);
                    var url = '@Url.Action("EmployeeDetails", "EmployeeRegistration")';
                    window.location.href = url;
                }
                else {
                    alert(data.Message);
                }
            }
        });

    }


    function Updatefilldata() {

        var Fk_UserTypeId = $("#Fk_UserTypeId option:selected").val();
        $(".errortext").removeClass("errortext");
        if ($("#Fk_UserTypeId").val() == "") {
            $("#Fk_UserTypeId").addClass('errortext');
            $("#Fk_UserTypeId").focus();
            return false;
        }
        if ($("#Name").val() == "") {
            $("#Name").addClass('errortext');
            $("#Name").focus();
            return false;
        }
        if ($("#Mobile").val() == "") {
            $("#Mobile").addClass('errortext');
            $("#Mobile").focus();
            return false;
        }
        if ($("#Email").val() == "") {
            $("#Email").addClass('errortext');
            $("#Email").focus();
            return false;
        }
        $.ajax({
            url: '/EmployeeRegistration/UpdateEmployeeRegistration',
            type: "GET",
            dataType: "JSON",
            data: { Name: $("#Name").val(), Mobile: $("#Mobile").val(), Email: $("#Email").val(), Qualification: $("#EducationQualififcation").val(), Fk_UserTypeId: Fk_UserTypeId, LoginId: $("#LoginId").val() },
            success: function (data) {
                debugger;
                if (data) {

                    debugger;
                    $('#Name').html("");
                    $('#Mobile').html("");
                    $('#Email').html("");

                    alert(data.Message);
                    var url = '@Url.Action("EmployeeDetails", "EmployeeRegistration")';
                    window.location.href = url;
                }

            }
        });

    }

</script>
