@model RealWealth.Models.User

@{
    ViewBag.Title = "ChangePasswordForUser";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

@using (Html.BeginForm("ChangePasswordForUser", "User", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="container">
        <div class="row layout-top-spacing">
            <div class="col-lg-12 col-12 layout-spacing">
                <div class="statbox widget box box-shadow">
                    <div class="widget-header">
                        <div class="row">
                            <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                <h4>Change Password</h4>
                                @*<span class="text-danger">
                                    @TempData["msg"]
                                </span>*@
                            </div>
                        </div>
                    </div>
                    <div class="widget-content widget-content-area">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <div class="col-sm-9">
                                        Old Password<span style="color: red">*</span>
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Old Password" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <div class="col-sm-9">
                                        New Password<span style="color: red">*</span>
                                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @placeholder = "New Password", @onchange = "return checkPasswordComplexity();" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row">
                                    <div class="col-sm-9">
                                        Confirm New Password<span style="color: red">*</span>
                                        @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control", @placeholder = "Confirm Password", @onchange = "return CheckConfirmPassword();" })

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <input class="btn btn-success pull-left" type="submit" value="Update" id="Update" name="Update" onclick="return validate();" />

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/assets/js/libs/jquery-3.1.1.min.js"></script>
@if (TempData["msg"] != null)
{
    <script>
        $(document).ready(function () {
            Snackbar.show({
                text: '@TempData["msg"]',
                actionTextColor: '#fff',
                backgroundColor: '#1abc9c',
                pos: 'top-right'
            });
        });
    </script>
}
@if (TempData["error"] != null)
{
    <script>
        $(document).ready(function () {
            Snackbar.show({
                text: '@TempData["error"]',
                actionTextColor: '#fff',
                backgroundColor: '#e7515a',
                pos: 'top-right'
            });
        });
    </script>
}
<script>
    function validate()
    {
        if ($('#Password').val() == '') {
            $("#Password").addClass('errortext');
            $('#Password').focus();
            return false;
        }
        if ($('#NewPassword').val() == '') {
            $("#NewPassword").addClass('errortext');
            $('#NewPassword').focus();
            return false;
        }
        if ($('#ConfirmNewPassword').val() == '') {
            $("#ConfirmNewPassword").addClass('errortext');
            $('#ConfirmNewPassword').focus();
            return false;
        }

    }

    function CheckConfirmPassword()
    {
        $(".errortext").removeClass("errortext");
        if($("#NewPassword").val()!=$("#ConfirmNewPassword").val())
        {
            Snackbar.show({
                text: "New Pasword and Confirm Password Should be same",
                actionTextColor: '#fff',
                backgroundColor: '#e7515a',
                pos: 'top-right'
            });
            $("#NewPassword").addClass("errortext");
            $("#ConfirmNewPassword").addClass("errortext");
            $("#NewPassword").val("");
            $("#ConfirmNewPassword").val("");
            $("#NewPassword").focus();
            $("#ConfirmNewPassword").focus();
        }
    }
    //function checkPasswordComplexity(pwd) {
    //    debugger;
    //    var pwd = $("#NewPassword").val();
    //    var letter = /[a-zA-Z]/;
    //    var number = /[0-9]/;
    //    var valid = number.test(pwd) && letter.test(pwd); //match a letter _and_ a number
    //    if (valid == false) {
    //        Snackbar.show({
    //            text: "New Password should be alpha numeric",
    //            actionTextColor: '#fff',
    //            backgroundColor: '#e7515a',
    //            pos: 'top-right'
    //        });
    //        $("#NewPassword").val('');
    //        $("#NewPassword").focus();
    //    }
    //}

</script>


<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>



