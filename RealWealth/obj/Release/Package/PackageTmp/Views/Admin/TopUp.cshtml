@model MyTrade.Models.Account
@{
    ViewBag.Title = "TopUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/plugins/notification/snackbar/snackbar.min.css" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("TopUp", "Admin", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
<div class="container">
    <div class="row layout-top-spacing">
        <div class="col-lg-12 col-12 layout-spacing">
            <div class="statbox widget box box-shadow">
                <div class="widget-header">
                    <div class="row">
                        <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                            <h4>Top-Up</h4>
                            @*<span class="text-danger">
                                @TempData["TopUp"]
                            </span>*@
                        </div>
                    </div>
                </div>
                <div class="widget-content widget-content-area">
                    <div class="row">
                        <div class="col-md-4">
                            <span style="color:red;">My Trade Wallet Balance : @ViewBag.TotalWalletAmount</span>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-4">
                            <label for="LoginId">LoginId</label>
                            @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @placeholder = "Login Id", @onchange = "return GetNameDetails();" })
                            @Html.HiddenFor(m => m.Name)
                            <label style="color:blue;" id="lblName"></label>
                        </div>
                        <div class="col-md-4">
                            <input type="hidden" id="amt" />
                            <input type="hidden" id="pkg" />
                            <label for="Package">Package <span style="color:red">*</span></label>
                            @Html.DropDownListFor(m => m.PackageId, new SelectList(ViewBag.ddlProduct, "Value", "Text"), new { @class = "form-control", @onchange="return GetPackageDetails();" })
                            <p class="text-success" id="spName"></p>
                        </div>
                        <div class="col-md-4">
                            <input type="hidden" id="WalletAmount" value="@ViewBag.TotalWalletAmount" />
                            <label for="Amount">Amount <span style="color:red">*</span></label>
                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @placeholder = "Amount", @onkeypress = "return isNumberKey(event);", @onchange = "return CheckAmount();" })
                            <span style="color:red">Min  : <span id="spfrom"></span> </span><span style="color:red;padding-left:50px"> Max : <span id="spto"></span> </span><span style="color:red;padding-left:50px"> In Multiple Of : <span id="spmul"></span></span>
                            <input type="hidden" value="@ViewBag.ToAmount" id="hdfMax" />
                            <input type="hidden" id="hdfMin" />
                        </div>
                    </div>
                    @*<div class="row mb-4">
                        <div class="col-md-4">
                            <label for="Amount">
                                Payment Type
                            </label><span style="color: red">*</span>
                            @Html.DropDownListFor(m => m.PaymentType, new SelectList(ViewBag.ddlpaymentType, "Value", "Text"), new { @class = "form-control", @onchange = "getpaymentTypedetails();" })
                        </div>
                        <div class="col-md-4" id="paymentmode" style="display: none">
                            <label for="Mode">Mode<span style="color:red">*</span></label>
                            @Html.DropDownListFor(m => m.PaymentMode, new SelectList(ViewBag.ddlpaymentmode, "Value", "Text"), new { @class = "form-control", @onchange = "return CheckPayMode();" })
                        </div>
                    </div>
                    <div class="row mb-4" style="display:none" id="divPaymentMode">
                        <div class="col-md-3" id="divQr" style="display: none">
                            <label id="lblQr"> Scan QR </label>
                            <img src="~/assets/img/QR.jpeg" height="200" width="200" />
                        </div>
                        <div class="col-md-3" id="divbankname">
                            <label for="BankName" id="lblbank">Bank Name</label>
                            @Html.TextBoxFor(m => m.BankName, new { @class = "form-control", @placeholder = "Bank Name", })
                        </div>
                        <div class="col-md-3" id="divbankbranch">
                            <label for="BranchName" id="lbltbranch">Branch Name</label>
                            @Html.TextBoxFor(m => m.BankBranch, new { @class = "form-control", @placeholder = "Branch Name" })
                        </div>
                        <div class="col-md-3" id="divtransactiono">
                            <label for="TransactionNo" id="lbltno">Transaction No</label>
                            @Html.TextBoxFor(m => m.TransactionNo, new { @class = "form-control", @placeholder = "TransactionNo", })
                        </div>
                        <div class="col-md-3" id="divtrdate">
                            <label for="TransactionDate" id="lbltdate">TransactionDate</label>
                            @Html.TextBoxFor(m => m.TransactionDate, new { @class = "form-control", @placeholder = "Transaction Date" })
                        </div>
                    </div>*@
                    <div class="col-md-4">
                        <input class="btn btn-success" name="btn_Pin" id="btn_Pin" type="button" value="Submit" onclick="return ValidateForm();" data-toggle="modal" />
                    </div>
                    @*<div class="row mb-4">
                        <div class="col-md-12">
                            <span style="color:red">From Amount : @ViewBag.FromAmount </span><span style="color:red;padding-left:50px"> To Amount : @ViewBag.ToAmount </span><span style="color:red;padding-left:50px"> In Multiple Of : @ViewBag.InMultipleOf</span>
                        </div>
                    </div>*@

                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                </button>
            </div>
            <div class="modal-body">
                <p class="modal-text">
                    Hello
                    Admin
                    , your <label id="lblTPS"></label> package for Rs. <label id="lblAmount"></label> is being initiated for <label id="lblLoginId"></label> with ROI @ViewBag.ROIPercent % per day
                </p>
            </div>
            <div class="modal-footer">
                <button class="btn" data-dismiss="modal"><i class="flaticon-cancel-12"></i> Discard</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
}

<script src="~/MyTradeWebsite/assets/js/jquery.min.js"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="~/plugins/notification/snackbar/snackbar.min.js"></script>
<!-- END PAGE LEVEL PLUGINS -->
<!--  BEGIN CUSTOM SCRIPTS FILE  -->
<script src="~/assets/js/components/notification/custom-snackbar.js"></script>
<script>
    //$(document).ready(function () {
    //    $("#PaymentType").val('Online');
    //});
    //$(function () {
    //    var $j = jQuery.noConflict();
    //    $("#TopUpDate").datepicker({
    //        dateFormat: 'dd/mm/yy',
    //    });
    //    $("#TransactionDate").datepicker({
    //        dateFormat: 'dd/mm/yy',
    //    });
    //});
    //function getpaymentTypedetails() {
    //    debugger;
    //    if ($('#PaymentType').val() == 'Offline') {
    //        $("#paymentmode").show();
    //    }
    //    else if ($('#PaymentType').val() == 'Online') {
    //        $("#paymentmode").hide();
    //        $("#divPaymentMode").hide();
    //        $("#BankName").val('');
    //        $("#BankBranch").val('');
    //        $("#TransactionNo").val('');
    //        $("#TransactionDate").val('');
    //    }
    //}
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    function CheckAmount() {
        debugger;
        var Amount = $("#Amount").val();
        var WalletBalance = $("#WalletAmount").val();
        if (Amount != null && Amount != "" && Amount != "0") {
            if (parseInt(Amount) % 1000 == 0) {
                if (parseInt(Amount) > parseInt(WalletBalance)) {
                    Snackbar.show({
                        text: "Insufficient Amount",
                        actionTextColor: '#fff',
                        backgroundColor: '#e7515a',
                        pos: 'top-right'
                    });
                    $("#Amount").addClass('errortext');
                    $('#Amount').focus();
                    $("#Amount").val('');
                    return false;
                }
                else if (parseInt(Amount) > parseInt($("#hdfMax").val())) {
                    Snackbar.show({
                        text: "Amount should not be greater than max amount",
                        actionTextColor: '#fff',
                        backgroundColor: '#e7515a',
                        pos: 'top-right'
                    });
                    $("#Amount").addClass('errortext');
                    $('#Amount').focus();
                    $("#Amount").val('');
                    return false;
                }
                else if (parseInt(Amount) < parseInt($("#hdfMin").val())) {
                    Snackbar.show({
                        text: "Amount should not be less than min amount",
                        actionTextColor: '#fff',
                        backgroundColor: '#e7515a',
                        pos: 'top-right'
                    });
                    $("#Amount").addClass('errortext');
                    $('#Amount').focus();
                    $("#Amount").val('');
                    return false;
                }
                else {

                }
            }
            else {
                Snackbar.show({
                    text: "Invalid Amount",
                    actionTextColor: '#fff',
                    backgroundColor: '#e7515a',
                    pos: 'top-right'
                });
                $("#Amount").addClass('errortext');
                $('#Amount').focus();
                $("#Amount").val('');
                return false;
            }
        }
        return true;
    }
    function ValidateForm() {
        debugger;
        jQuery.noConflict();
        $('#exampleModal').modal('hide');
        $(".errortext").removeClass("errortext");
        if ($('#PackageId').val() == '0') {
            $("#PackageId").addClass('errortext');
            $('#PackageId').focus();
            return false;
        }
        else if ($('#Amount').val() == '') {
            $("#Amount").addClass('errortext');
            $('#Amount').focus();
            return false;
        }
        else {
            SetAmountandPackage();
            return true;
        }

    }
    function SetAmountandPackage() {
        debugger;
        jQuery.noConflict();
        $('#exampleModal').modal('show');
        $("#lblAmount").text($("#Amount").val());
        $("#lblLoginId").text($("#LoginId").val());
        $("#lblTPS").text($("#PackageId :selected").text());
    }
    //function CheckPayMode() {
    //    debugger;
    //    if ($('#PaymentMode').val() != '1' && $('#PaymentMode').val() != "10") {
    //        $('#lbltno').html('Transaction No.');
    //        $('#lbltdate').html('Transaction Date');
    //        $('#lblbank').html('Bank Name');
    //        $("#divtrdate").show();
    //        $("#divPaymentMode").show();
    //        $("#divtransactiono").show();
    //        $("#divbankname").show();
    //        $("#divbankbranch").show();
    //        $("#divQr").hide();
    //        $("#BankName").attr("placeholder", "Bank Name");
    //        $("#TransactionNo").attr("placeholder", "Transaction No.");
    //        $("#TransactionDate").attr("placeholder", "Transaction Date");
    //    }
    //    else if ($('#PaymentMode').val() == "10") {
    //        $('#lbltno').html('Transaction Id');
    //        $('#lbltdate').html('Transaction Date');
    //        $('#lblbank').html('UPI Id');
    //        $("#BankName").val('');
    //        $("#BankBranch").val('');
    //        $("#divtrdate").show();
    //        $("#divPaymentMode").show();
    //        $("#divtransactiono").show();
    //        $("#divbankname").show();
    //        $("#divQr").show();
    //        $("#divbankbranch").hide();
    //        $("#BankName").attr("placeholder", "UPI Id");
    //        $("#TransactionNo").attr("placeholder", "Transaction Id");
    //        $("#TransactionDate").attr("placeholder", "Transaction Date");
    //    }
    //    else {
    //        $("#divPaymentMode").hide();
    //        $("#divtransactiono").hide();
    //        $("#divbankname").hide();
    //        $("#divbankbranch").hide();
    //        $("#divtrdate").hide();
    //        $("#divQr").hide();
    //    }

    //}
    function GetPackageDetails()
    {
        $.ajax({
            url: '/Admin/GetPackageDetails', type: 'post', dataType: 'json',
            data: { 'PackageId': $("#PackageId").val() },
            success: function (data) {
                debugger;
                if (data.Result == "yes") {
                    $("#spfrom").text(data.FromAmount);
                    $("#spto").text(data.ToAmount);
                    $("#spmul").text(data.InMultipleOf);
                    $("#hdfMax").val(data.ToAmount);
                    $("#hdfMin").val(data.FromAmount);
                }
                else  {
                    $("#PackageId").val('0')
                }
            }
        });
    }
    function GetNameDetails() {
        debugger;
        var LoginId = $('#LoginId').val();
        $.ajax({
            url: '/Admin/GetNameDetails', type: 'post', dataType: 'json',
            data: { 'LoginId': LoginId },
            success: function (data) {
                debugger;
                if (data.Result == "yes") {
                    $("#Name").val(data.Name);
                    $("#lblName").text($("#Name").val()+'(Wallet Balance : '+data.Amount+')');
                    $("#LoginId").removeClass('errortext');
                    $("#Name").removeClass('errortext');

                }
                else if (data.Result == "no") {
                    alert('Invailid LoginId');

                    $("#LoginId").val('');
                    $("#Name").val('');
                    $("#LoginId").addClass('errortext');
                    $("#Name").addClass('errortext');
                    $('#LoginId').focus();
                }
            }
        });
    }
</script>

@if (TempData["msg"] != null)
{
<script>
    $(document).ready(function () {
        Snackbar.show({
            text: '@TempData["msg"]',
            actionTextColor: '#fff',
            backgroundColor: '#1abc9c',
            pos: 'top-right'
        });
    });
</script>
}
@if (TempData["error"] != null)
{
<script>
    $(document).ready(function () {
        Snackbar.show({
            text: '@TempData["error"]',
            actionTextColor: '#fff',
            backgroundColor: '#e7515a',
            pos: 'top-right'
        });
    });
</script>
}